name: CI_Test_Lint_Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

  check-version:
    name: Ensure version bump
    runs-on: ubuntu-latest
    needs: validate_dependencies
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # we need history to compare with main

      - name: Get version on PR branch
        id: pr_version
        run: |
          version=$(grep '__version__' vinyl_models/__init__.py | cut -d '"' -f2)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Get version on main branch
        id: main_version
        run: |
          git fetch origin main
          main_version=$(git show origin/main:vinyl_models/__init__.py | grep '__version__' | cut -d '"' -f2)
          echo "version=$main_version" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: pip install packaging

      - name: Run version comparison
        run: |
          python scripts/check_version.py \
            "${{ steps.pr_version.outputs.version }}" \
            "${{ steps.main_version.outputs.version }}"

  lint:
    runs-on: ubuntu-latest
    needs: validate_dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install linters
        run: |
          pip install sqlfluff ruff

      - name: Lint Python code
        run: |
          ruff check .
          ruff format .

      - name: Lint SQL files
        run: |
          sqlfluff lint . --dialect postgres

  test:
    runs-on: ubuntu-latest
    needs: validate_dependencies
    steps:
      - uses: actions/checkout@v3
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - run: pip install -e .[dev]
      - run: supabase db start
      - run: supabase db reset

      - name: Run unit tests
        env:
          TEST_DB_URL: ${{ secrets.TEST_DB_URL }}
        run: |
          pytest tests/

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install build tools
        run: |
          pip install build

      - name: Build package
        run: |
          python -m build
